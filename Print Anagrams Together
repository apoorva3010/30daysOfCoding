#User function Template for python3

class Solution:
    def Anagrams(self, words, n):
        '''
        words: list of word
        n:      no of words
        return : list of group of anagram {list will be sorted in driver code (not word in grp)}
        '''
        tempword = 0
        finallist=[]
        templist=[]
        while(tempword<n): #0<3
            tempn = tempword+1
            if(words[tempword]!=""):
                currentword = words[tempword] #no
                templist.append(currentword) #["no",]
                if tempn!=n-1:
                    for x in range(tempn,n): #1 to 2
                        if(sorted(currentword) == sorted(words[x])):
                            templist.append(words[x]) #["no","on",]
                            words[x] = ""
                finallist.append(templist)
                templist=[]
                words[tempword]=""
                tempword+=1 #1
            else:
                tempword+=1
        return(finallist)
        
            
                    
                    
#{ 
#  Driver Code Starts
#Initial Template for Python 3

#contributed by RavinderSinghPB
if __name__ =='__main__':
    t= int(input())
    for tcs in range(t):
        n= int(input())
        words=input().split()
        
        ob = Solution()
        ans = ob.Anagrams(words,n)
        
        for grp in sorted(ans):
            for word in grp:
                print(word,end=' ')
            print()

# } Driver Code Ends
